#!/usr/bin/env bash
set -euo pipefail

# Simple script for getting URL of current commit.
# Should work as `git url` if it's in your $PATH.

function usage() {
    echo "Usage: $0 [-h|-m|-r] <REV> [REV] ..." 1>&2
    echo "  -r - Target is a range till HEAD."
    echo "  -m - Show messages."
    exit 1
}

function git_remote_url() {
    git config --get remote.origin.url | sed -E \
        's;^git@([^:]+):(.+)/(.+)(.git)?;https://\1/\2/\3;'
}

function show_commit() {
    TARGET=${1}
    GIT_COMMIT=$(git rev-parse ${TARGET})
    GIT_MESSAGE=$(git show --pretty=format:%s -s ${TARGET})

    # Use only the first 8 characters of Git SHA1
    COMMIT_URL="$(git_remote_url)/commit/${GIT_COMMIT::8}"

    RVAL="${COMMIT_URL}"
    if [[ "${MARKDOWN_FORMAT}" -eq 1 ]]; then
        RVAL="[${GIT_COMMIT::8}](${COMMIT_URL})"
    fi
    if [[ "${SHOW_MESSAGE}" -eq 1 ]]; then
        RVAL+=" - ${GIT_MESSAGE}"
    fi
    echo -n "${RVAL}"
}

SHOW_MESSAGE=0
MARKDOWN_FORMAT=0
while getopts "m?r?f?h?" o; do
    case "${o}" in
        m) SHOW_MESSAGE=1;;
        f) MARKDOWN_FORMAT=1;;
        h|*) usage;;
    esac
done
shift $((OPTIND-1))

{
if [[ "${#}" -eq 0 ]]; then
    show_commit "HEAD"
else
    while [[ "${#}" -gt 0 ]]; do
        TARGET="${1}"
        if [[ "${1}" =~ .*~.* ]] && [[ ! "${1}" =~ .*\.\..* ]]; then
            TARGET="${1}..HEAD"
        fi
        for SHA1 in $(git rev-list ${TARGET}); do
            show_commit "${SHA1}"
        done
        shift
    done
fi
} | tee >(xsel -i --primary) \
  | tee >(xsel -i --clipboard)
