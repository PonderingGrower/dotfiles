#!/usr/bin/env bash
set -euo pipefail

# Simple script for getting URL of current commit.
# Should work as `git url` if it's in your $PATH.

function usage() {
    echo "Usage: $0 [-h|-m|-r] <REV> [REV] ..." 1>&2
    echo "  -r - Target is a range till HEAD."
    echo "  -m - Show messages."
    exit 1
}

function show_commit() {
    TARGET=${1}
    GIT_COMMIT=$(git rev-parse ${TARGET})
    GIT_MESSAGE=$(git show --pretty=format:%s -s ${TARGET})

    GITHUB_URL="${GIT_REMOTE_URL#git@github.com:}"
    GITHUB_URL="${GITHUB_URL#https://github.com/}"
    REPO_NAME="${GITHUB_URL%.git}"
    # Use only the first 8 characters of Git SHA1
    COMMIT_URL="https://github.com/${REPO_NAME}/commit/${GIT_COMMIT::8}"

    RVAL="${COMMIT_URL}"
    if [[ "${SHOW_MESSAGE}" -eq 1 ]]; then
        RVAL+=" - ${GIT_MESSAGE}"
    fi
    echo "${RVAL}"
}

# Verify the repo supports this script.
GIT_REMOTE_URL=$(git config --get remote.origin.url)
if [[ "${GIT_REMOTE_URL}" != *github.com* ]]; then
    echo "Not a GitHub Origin!"
    exit 1
fi

SHOW_MESSAGE=0
COMMIT_RANGE=0
while getopts "m?r?h?" o; do
    case "${o}" in
        m) SHOW_MESSAGE=1;;
        r) COMMIT_RANGE=1;;
        h|*) usage;;
    esac
done
shift $((OPTIND-1))

{
if [[ "${#}" -eq 0 ]]; then
    show_commit "HEAD"
elif [[ "${COMMIT_RANGE}" -eq 1 ]]; then
    for SHA1 in $(git log --format=%H ${@}..HEAD); do
        show_commit "${SHA1}"
    done
else
    while [[ "${#}" -gt 0 ]]; do
        show_commit "${1}"
        shift
    done
fi
} | tee >(xsel -i --primary) \
  | tee >(xsel -i --clipboard)
